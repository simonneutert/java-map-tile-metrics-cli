/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    // implementation libs.guava

    implementation 'com.fasterxml.jackson.jr:jackson-jr-objects:2.18.0-rc1'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // implementation files('libs/map_tile_metrics-0.0.1.jar')
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'de.simon_neutert.map_tile_metrics_cli.App'
}

tasks.named('jar') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        manifest {
            attributes(
                'Main-Class': application.mainClass,
                'Implementation-Title': 'project.name',
                'Implementation-Version': 'project.version'
            )
    }
    // Will include every single one of your dependencies, project or not
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }   
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
